<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>动态数组 on yicixin&#39;s blog</title>
    <link>https://www.yici.xin/tags/%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</link>
    <description>Recent content in 动态数组 on yicixin&#39;s blog</description>
    <image>
      <url>https://www.yici.xin/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.yici.xin/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 16 May 2023 21:26:57 +0800</lastBuildDate><atom:link href="https://www.yici.xin/tags/%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust动态数组Vector</title>
      <link>https://www.yici.xin/post/tech/rust%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84vector/</link>
      <pubDate>Tue, 16 May 2023 21:26:57 +0800</pubDate>
      
      <guid>https://www.yici.xin/post/tech/rust%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84vector/</guid>
      <description>在Rust中，动态数组被称为&amp;quot;Vec&amp;quot;或&amp;quot;Vector&amp;quot;。Vector是一种在堆上分配内存的集合类型，允许你存储多个值。它的大小是动态的，可以根据需要进行增减。
创建Vector 创建rust动态数组有好几种方式
```rust let v: Vec = Vec::new(); ``` ```rust let v: Vec = Vec::with_capacity(capacity) ``` ```rust let v = vec![1, 2, 3]; ``` 读取元素 Vec读取指定位置的元素有两种方式
使用下标 使用get ```rust fn main() { let v = vec![1, 2, 3, 4, 5]; let third: &amp;i32 = &amp;v[2]; println!(&#34;第三个元素是 {}&#34;, third); } ``` ```rust fn main() { let v = vec![1, 2, 3, 4, 5]; match v.get(2) { Some(third) =&gt; println!(&#34;第三个元素是 {third}&#34;), None =&gt; println!</description>
    </item>
    
  </channel>
</rss>
