<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>闭包 on yicixin&#39;s blog</title>
    <link>https://www.yici.xin/tags/%E9%97%AD%E5%8C%85/</link>
    <description>Recent content in 闭包 on yicixin&#39;s blog</description>
    <image>
      <url>https://www.yici.xin/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.yici.xin/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 06 Jun 2023 23:09:15 +0800</lastBuildDate><atom:link href="https://www.yici.xin/tags/%E9%97%AD%E5%8C%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust函数式编程特性 迭代器和闭包</title>
      <link>https://www.yici.xin/post/tech/rust%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E7%89%B9%E6%80%A7-%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/</link>
      <pubDate>Tue, 06 Jun 2023 23:09:15 +0800</pubDate>
      
      <guid>https://www.yici.xin/post/tech/rust%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E7%89%B9%E6%80%A7-%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%92%8C%E9%97%AD%E5%8C%85/</guid>
      <description>Rust’s design has taken inspiration from many existing languages and techniques, and one significant influence is functional programming. Programming in a functional style often includes using functions as values by passing them in arguments, returning them from other functions, assigning them to variables for later execution, and so forth.
In this chapter, we won’t debate the issue of what functional programming is or isn’t but will instead discuss some features of Rust that are similar to features in many languages often referred to as functional.</description>
    </item>
    
  </channel>
</rss>
