<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Channel on 绝知</title>
    <link>https://www.yici.xin/tags/channel/</link>
    <description>Recent content in Channel on 绝知</description>
    <image>
      <url>https://www.yici.xin/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.yici.xin/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 21 Nov 2022 09:45:13 +0800</lastBuildDate><atom:link href="https://www.yici.xin/tags/channel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go channel</title>
      <link>https://www.yici.xin/post/tech/go-channel/</link>
      <pubDate>Mon, 21 Nov 2022 09:45:13 +0800</pubDate>
      
      <guid>https://www.yici.xin/post/tech/go-channel/</guid>
      <description>&lt;h2 id=&#34;数据结构&#34;&gt;数据结构&lt;/h2&gt;
&lt;p&gt;channel 的底层源码和相关实现在/src/runtime/chan.go中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;type&lt;/span&gt; hchan &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	qcount   &lt;span style=&#34;color:#8be9fd&#34;&gt;uint&lt;/span&gt;           &lt;span style=&#34;color:#6272a4&#34;&gt;// 队列中所有数据总数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	dataqsiz &lt;span style=&#34;color:#8be9fd&#34;&gt;uint&lt;/span&gt;           &lt;span style=&#34;color:#6272a4&#34;&gt;// 环形队列的 size&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	buf      unsafe.Pointer &lt;span style=&#34;color:#6272a4&#34;&gt;// 指向 dataqsiz 长度的数组&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	elemsize &lt;span style=&#34;color:#8be9fd&#34;&gt;uint16&lt;/span&gt;         &lt;span style=&#34;color:#6272a4&#34;&gt;// 元素大小&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	closed   &lt;span style=&#34;color:#8be9fd&#34;&gt;uint32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	elemtype &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;_type         &lt;span style=&#34;color:#6272a4&#34;&gt;// 元素类型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sendx    &lt;span style=&#34;color:#8be9fd&#34;&gt;uint&lt;/span&gt;           &lt;span style=&#34;color:#6272a4&#34;&gt;// 已发送的元素在环形队列中的位置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	recvx    &lt;span style=&#34;color:#8be9fd&#34;&gt;uint&lt;/span&gt;           &lt;span style=&#34;color:#6272a4&#34;&gt;// 已接收的元素在环形队列中的位置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	recvq    waitq          &lt;span style=&#34;color:#6272a4&#34;&gt;// 接收者的等待队列&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sendq    waitq          &lt;span style=&#34;color:#6272a4&#34;&gt;// 发送者的等待队列&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#6272a4&#34;&gt;// lock 锁保护 hchan 中的所有字段，以及此通道上被阻塞的 sudogs 中的多个字段。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#6272a4&#34;&gt;// 持有 lock 的时候，禁止更改另一个 G 的状态（特别是不要使 G 状态变成ready）， &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;// 因为这会因为堆栈 shrinking 而发生死锁。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	lock mutex
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://yicixin-blog-image.oss-accelerate.aliyuncs.com/img/202211291714199.png&#34; alt=&#34;hchan数据结构&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;recvq 和 sendq 是等待队列，waitq 类型是一个双向链表：&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
